<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:AmxxTutorial.ViewModels"
             xmlns:ctrl="clr-namespace:AmxxTutorial.Controls"
             xmlns:icon="clr-namespace:AmxxTutorial.MarkupExtensions"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="800"
             x:Class="AmxxTutorial.Views.MainView"
             x:DataType="vm:MainViewModel">

  <Design.DataContext>
    <vm:MainViewModel />
  </Design.DataContext>

  <Grid RowDefinitions="Auto, *">
    <!-- Top Border with Menu -->
    <Border Grid.Row="0"
            Padding="12, 4"
            Margin="8"
            CornerRadius="10"
            VerticalAlignment="Stretch"
            Classes="Shadow"
            Theme="{DynamicResource CardBorder}">
      <Panel>
        <StackPanel Orientation="Horizontal" Spacing="8">

          <!-- Back to Home Toggle Switch -->
          <ToggleSwitch Name="BackToHomeButton"
                        Theme="{DynamicResource IconBorderlessToggleSwitch}"
                        Command="{Binding BackToHomeCommand}"
                        Content="{StaticResource SemiIconSidebar}" />

          <!-- Title -->
          <SelectableTextBlock VerticalAlignment="Center"
                               Classes="H6"
                               Text="Semi Avalonia"
                               Theme="{DynamicResource TitleSelectableTextBlock}" />

          <SelectableTextBlock VerticalAlignment="Center"
                               Text="/" />

          <SelectableTextBlock VerticalAlignment="Center"
                               Classes="Secondary"
                               Text="23333" />
        </StackPanel>

        <!-- Right Side Buttons -->
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">

          <!-- Documentation Button -->
          <Button Theme="{DynamicResource IconBorderlessButton}"
                  Command="{Binding OpenUrlCommand}"
                  CommandParameter="{Binding DocumentationUrl}"
                  Content="{StaticResource SemiIconGlobe}" />

          <!-- GitHub Button -->
          <Button Theme="{DynamicResource IconBorderlessButton}"
                  Command="{Binding OpenUrlCommand}"
                  CommandParameter="{Binding RepoUrl}"
                  Content="{StaticResource SemiIconGithubLogo}" />

          <!-- Theme Toggle Switch -->
          <ToggleSwitch Theme="{DynamicResource IconBorderlessToggleSwitch}"
                        IsChecked="{Binding CheckToggleScheme}"
                        Command="{Binding ToggleThemeCommand}"
                        OnContent="{StaticResource SemiIconMoon}"
                        OffContent="{StaticResource SemiIconSun}"
                        ToolTip.Placement="Bottom"
                        ToolTip.Tip="{DynamicResource ThemeToggleTooltip}" />

          <!-- Menu Button -->
          <Button Theme="{DynamicResource IconBorderlessButton}"
                  Content="{StaticResource SemiIconMenu}"
                  ToolTip.Placement="Bottom"
                  ToolTip.Tip="{DynamicResource OtherSettingsToolTip}">
            <Button.Flyout>
              <MenuFlyout Placement="Bottom" ItemsSource="{Binding RightMenuItems}" />
            </Button.Flyout>
            <Button.Styles>
              <Style Selector="MenuItem" x:DataType="vm:RightMenuItem">
                <Setter Property="Header" Value="{Binding Header}" />
                <Setter Property="ItemsSource" Value="{Binding Items}" />
                <Setter Property="Command" Value="{Binding Command}" />
                <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
              </Style>
            </Button.Styles>
          </Button>
        </StackPanel>
      </Panel>
    </Border>

    <!-- TabControl Section -->
    <Border Grid.Row="1" Margin="5">
      <DockPanel>
        <!-- 左侧：只负责显示 Tab 图标＋文字，不要 ContentTemplate -->
        <TabControl
          DockPanel.Dock="Left"
          Width="80"
          TabStripPlacement="Left"
          VerticalAlignment="Stretch"
          HorizontalAlignment="Stretch"
          ItemsSource="{Binding NavigationTabItemInfo}"
          SelectedItem="{Binding SelectedNavigationTab, Mode=TwoWay}">

          <TabControl.Styles>
            <Style Selector="TabControl /template/ #PART_BorderSeparator" x:SetterTargetType="Border">
              <Setter Property="IsVisible" Value="False" />
            </Style>
          </TabControl.Styles>

          <!-- 只保留 ItemTemplate 用于绘制按钮 -->
          <TabControl.ItemTemplate>
            <DataTemplate>
              <Grid Width="80" Height="80" HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                  <Viewbox Width="35" Height="35" Stretch="Uniform">
                    <PathIcon Theme="{DynamicResource InnerPathIcon}"
                              Data="{Binding Icon.Geometry}" />
                  </Viewbox>
                  <ctrl:LocalizedTextBlock HorizontalAlignment="Center"
                                           ResourceKey="{Binding Header}"
                                           FontSize="12"
                                           IsVisible="{Binding !IsSelected}" />
                </StackPanel>
              </Grid>
            </DataTemplate>
          </TabControl.ItemTemplate>
        </TabControl>

        <!-- 右侧：一次性实例化所有页面，仅用 IsVisible 切换 -->
        <ItemsControl ItemsSource="{Binding NavigationTabItemInfo}">
          <!-- 用 Grid 做 ItemsPanel，这样所有子项都在同一个单元格，互相覆盖 -->
          <ItemsControl.Styles>
            <Style Selector="ItemsControl > ContentPresenter"
                   x:DataType="vm:NavigationTabItem"
                   >
              <Setter Property="IsVisible" Value="{Binding IsSelected}" />
            </Style>
          </ItemsControl.Styles>
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <Grid />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>

          <ItemsControl.ItemTemplate>
            <DataTemplate x:DataType="vm:NavigationTabItem">
              <Border HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Theme="{DynamicResource CardBorder}"
                      Classes="Shadow"
                      CornerRadius="6"
                      Margin="0">
                <ContentControl Content="{Binding Page}"
                                IsVisible="{Binding IsSelected}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"/>
              </Border>
            </DataTemplate>
          </ItemsControl.ItemTemplate>


        
      </ItemsControl>
      </DockPanel>
    </Border>
  </Grid>
</UserControl>
