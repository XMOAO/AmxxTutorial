{
    "functions": [
        {
            "Comment": "Use this function to register forwards",
            "CommentTags": [],
            "FunctionName": "register_statsfwd",
            "Function": "native register_statsfwd( ftype );"
        },
        {
            "Comment": "Function is called after player to player attacks ,\nif players were damaged by teammate TA is set to 1",
            "CommentTags": [],
            "FunctionName": "client_damage",
            "Function": "forward client_damage(attacker,victim,damage,wpnindex,hitplace,TA);"
        },
        {
            "Comment": "Function is called after player death ,\nif player was killed by teammate TK is set to 1",
            "CommentTags": [],
            "FunctionName": "client_death",
            "Function": "forward client_death(killer,victim,wpnindex,hitplace,TK);"
        },
        {
            "Comment": "function will return index of new weapon",
            "CommentTags": [],
            "FunctionName": "custom_weapon_add",
            "Function": "native custom_weapon_add( const wpnname[],melee = 0,const logname[]=\"\" );"
        },
        {
            "Comment": "Function will pass damage done by this custom weapon to stats module and other plugins",
            "CommentTags": [],
            "FunctionName": "custom_weapon_dmg",
            "Function": "native custom_weapon_dmg( weapon, att, vic, damage, hitplace=0 );"
        },
        {
            "Comment": "Function will pass info about custom weapon shot to stats module",
            "CommentTags": [],
            "FunctionName": "custom_weapon_shot",
            "Function": "native custom_weapon_shot( weapon,index ); // weapon id , player id"
        },
        {
            "Comment": "function will return 1 if true",
            "CommentTags": [],
            "FunctionName": "xmod_is_melee_wpn",
            "Function": "native xmod_is_melee_wpn(wpnindex);"
        },
        {
            "Comment": "Returns weapon name.",
            "CommentTags": [],
            "FunctionName": "xmod_get_wpnname",
            "Function": "native xmod_get_wpnname(wpnindex,name[],len);"
        },
        {
            "Comment": "Returns weapon logname.",
            "CommentTags": [],
            "FunctionName": "xmod_get_wpnlogname",
            "Function": "native xmod_get_wpnlogname(wpnindex,name[],len);"
        },
        {
            "Comment": "Returns weapons array size",
            "CommentTags": [],
            "FunctionName": "xmod_get_maxweapons",
            "Function": "native xmod_get_maxweapons();"
        },
        {
            "Comment": "Returns stats array size ex. 8 in TS , 9 in DoD",
            "CommentTags": [],
            "FunctionName": "xmod_get_stats_size",
            "Function": "native xmod_get_stats_size();"
        },
        {
            "Comment": "Returns 1 if true",
            "CommentTags": [],
            "FunctionName": "xmod_is_custom_wpn",
            "Function": "native xmod_is_custom_wpn(wpnindex);"
        },
        {
            "Comment": "*********** Shared Natives End *******************************",
            "CommentTags": [],
            "FunctionName": "tfc_isgrenade",
            "Function": "stock tfc_isgrenade( weapon ){"
        },
        {
            "Comment": "This function has no description.",
            "CommentTags": [],
            "Function": "native tfc_userkill( index );",
            "FunctionName": "tfc_userkill"
        },
        {
            "Comment": "Use this function to set private data offsets if needed\nDefault offsets:\ntimer: 932\nsentrygun: 83\nfrom AssKicR\nshells: 53\nbullets: 55\ncells: 57\nrockets: 59\nnade1: 14\nnade2: 15",
            "CommentTags": [],
            "FunctionName": "tfc_setpddata",
            "Function": "native tfc_setpddata(timer,sentrygun,shells,bullets,cells,rockets,nade1,nade2);"
        },
        {
            "Comment": "******************************************************************",
            "CommentTags": [],
            "FunctionName": "tfc_setmodel",
            "Function": "native \ttfc_setmodel(index, const Model[], const Skin[]);"
        },
        {
            "Comment": "This function has no description.",
            "CommentTags": [],
            "Function": "native \ttfc_clearmodel(index);",
            "FunctionName": "tfc_clearmodel"
        },
        {
            "Comment": "Ammo Types in tfcconst.inc",
            "CommentTags": [],
            "FunctionName": "tfc_getbammo",
            "Function": "native \ttfc_getbammo(index, ammo);"
        },
        {
            "Comment": "Set amount of ammo in backpack on a user for a specific weapon",
            "CommentTags": [],
            "FunctionName": "tfc_setbammo",
            "Function": "native \ttfc_setbammo(index, ammo, value);"
        },
        {
            "Comment": "Weapons list in tfcconst.inc",
            "CommentTags": [],
            "FunctionName": "tfc_getweaponbammo",
            "Function": "native tfc_getweaponbammo(index, weapon);"
        },
        {
            "Comment": "Sets amount of ammo in weapon's clip (backpack)",
            "CommentTags": [],
            "FunctionName": "tfc_setweaponbammo",
            "Function": "native tfc_setweaponbammo(index, weapon, value);"
        },
        {
            "Comment": "Index must be weapon's entity index",
            "CommentTags": [],
            "FunctionName": "tfc_getweaponammo",
            "Function": "native tfc_getweaponammo(index);"
        },
        {
            "Comment": "Index must be weapon's entity index",
            "CommentTags": [],
            "FunctionName": "tfc_setweaponammo",
            "Function": "native tfc_setweaponammo(index, value);"
        },
        {
            "Comment": "Returns 1 if user is carrying a goal item such as a flag or a keycard, else 0.\nTeam is by reference parameter that will be set to owning team(s) of the goal item.\nUse the TFC_GOALITEM_* constants to determine the owning team.",
            "CommentTags": [],
            "FunctionName": "tfc_get_user_goalitem",
            "Function": "native tfc_get_user_goalitem(index, &team);"
        },
        {
            "Comment": "Returns 1 if the player is a spy and is currently feigning death",
            "CommentTags": [],
            "FunctionName": "tfc_is_user_feigning",
            "Function": "native tfc_is_user_feigning(index);"
        },
        {
            "Comment": "Returns 1 if the two teams are allies, 0 otherwise\nNote: Team must be 1->4\n      Team 0 will always return 0\n      Any other team will result in an error",
            "CommentTags": [],
            "FunctionName": "tfc_is_team_ally",
            "Function": "native tfc_is_team_ally(TeamA,TeamB);"
        }
    ],
    "constants": [
        {
            "Comment": "*********** Shared Natives Start *******************************",
            "CommentTags": [],
            "Constant": ""
        },
        {
            "Comment": "Forward types",
            "CommentTags": [],
            "Constant": "enum {\n  XMF_DAMAGE = 0,\n  XMF_DEATH,\n};"
        },
        {
            "Comment": "Custom Weapon Support",
            "CommentTags": [],
            "Constant": ""
        },
        {
            "Comment": "Get amount of ammo in backpack on a user for a specific weapon",
            "CommentTags": [],
            "Constant": ""
        },
        {
            "Comment": "Returns amount of ammo in weapon's clip (backpack)",
            "CommentTags": [],
            "Constant": ""
        },
        {
            "Comment": "Returns amount of ammo in weapon's clip",
            "CommentTags": [],
            "Constant": ""
        },
        {
            "Comment": "Sets amount of ammo in weapon's clip",
            "CommentTags": [],
            "Constant": ""
        }
    ]
}